spring:
  application:
    name: SpringKafka




# spring cloud stream config
#  cloud:
#    stream:
#
#      bindings:
#        streamProcess-in-0:
#          destination: streams-topic-input
#          group: spring-kafka-consumer-group
#          error-handler-definition: errorHandler
#          consumer:
#            retry-template-name: retryTemplate
#
#
#        streamProcess-out-0:
#          destination: streams-topic-output
#          error-handler-definition: errorHandler
##          producer:
##            error-channel-enabled: true
#
#
#        errorHandler-out-0:
#          destination: streams-topic-error
#
#        error:
#          destination: streams-topic-error
#
##      default:
##        error-handler-definition: errorHandler
#
#
#      kafka:
#        binder:
#          transaction:
#            producer:
#              use-native-encoding: true
#              error-channel-enabled: true
#          headers:
#            - spanId
#            - spanTraceId
#            - spanSampled
#            - spanParentSpanId
#            - spanName
#            - spanFlags
#            - eventType
#            - Authorization
#

#        streams:
#          binder:
#            deserialization-exception-handler: sendtodlq


#        stringSupplier-out-0:
#          destination: test-topic
#
#        stringConsumer-in-0:
#          destination: input-topic


#    function:
##      definition: stringSupplier,stringConsumer
#      definition: streamProcess
#





#
#  # spring kafka config
  kafka:
    bootstrap-servers: "kafka.broker.local:9092,192.168.122.157:9092"
    producer:
      acks: all

      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      client-id: spring-kafka-producer-client

    consumer:
      client-id: spring-kafka-consumer-client
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: spring-kafka-consumer-group-1

    listener:
      log-container-config: true





#logging:
#  level:
#    root: debug
# log color
  output:
    ansi:
      enabled: always



server:
  servlet:
    context-path: /v1/kafka


logging:
  file:
    name: /tmp/spring/${spring.application.name}.log

  level:
    file: debug
  logback:
    rollingpolicy:
      max-file-size: 1MB




